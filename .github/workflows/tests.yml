name: CI-tests

on: workflow_call

jobs:
# -----------------------------BEGINNING OF SETUP-RUBY ----------------------------
  setup-ruby:
    name: Setup Ruby
    runs-on: ubuntu-latest

    steps:
      - name: Checkout moduolar_monolith
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        env:
          # BUNDLE_GITHUB__COM: x-access-token:${{ secrets.REPO_SCOPED_TOKEN }}
          BUNDLE_WITH: test
          BUNDLE_WITHOUT: development:staging:production
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 1 # increment this number when you have to empty the cache manually
# ----------------END OF SETUP-RUBY-----------------------------------------------

# -----------------------------BEGINNING OF TESTS ----------------------------
  tests:
    name: Run specs
    runs-on: ubuntu-latest
    needs: [ setup-ruby ]

    env:
      RAILS_ENV: test
      RAILS_MAX_THREAD: 5
      OSTYPE: linux # not set on GitHub's Ubuntu :-/
      APP_DB_NAME: app_ci
      APP_DB_HOST: localhost
      APP_DB_PORT: 5432
      APP_DB_USERNAME: postgres
      APP_DB_PASSWORD: postgres

    services:
      postgres:
        image: postgres # Docker Hub image
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_ci
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 4s
          --health-timeout 3s
          --health-retries 8

    steps:
      - name: Checkout moduolar_monolith
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          cache-version: 1

      - name: Setup DB
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: |
          bundle exec rake db:drop db:create
          bundle exec rake db:schema:load

# --- till here it was only Ruby and Postgres DB Setup, now the tests are executed:

      - name: Run specs
        run: |
          bundle exec rspec

# ----------------END OF TESTS-----------------------------------------------
